#!/usr/bin/ruby

# Solution to Project Euler problem 12
# By Trey Thomas
#
# | The sequence of triangle numbers is generated by adding the natural numbers.
# | So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The
# | first ten terms would be:
# |
# | 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
# |
# | Let us list the factors of the first seven triangle numbers:
# |
# | Â 1: 1
# | Â 3: 1,3
# | Â 6: 1,2,3,6
# | 10: 1,2,5,10
# | 15: 1,3,5,15
# | 21: 1,3,7,21
# | 28: 1,2,4,7,14,28
# |
# | We can see that 28 is the first triangle number to have over five divisors.
# |
# | What is the value of the first triangle number to have over five hundred
# | divisors?
#
# Generate triangle numbers, checking the divisors of each one until an element
# is found with over 500 divisors.

require_relative 'triangle_numbers'
require_relative 'divisors'


gen = TriangleNumbers.new

gen.next until gen.current.divisors.size > 500

puts gen.current

